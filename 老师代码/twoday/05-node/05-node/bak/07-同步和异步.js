/*
    进程：

    线程：

    JS是单线程，同一时刻，JS只能做一件事（任务）。
        如果JS跑在浏览器中，浏览器会开一个线程，执行JS代码。
        如果JS跑在NODE端，它也是单线程。

    所有操作分同步和异步操作，换句话说，所有的代码，要么是同步代码，要么是异步代码。

    如果是同步代码，代码需要从上到下依次执行。你写的绝大部分的代码都是同步代码。
        console.log(1) // 任务1
        for(let i=0; i<=10; i++){} // 任务2
        console.log(2) // 任务3

    异步任务：JS规定了有些代码操作非常耗时，把这个任务规定成异步任务。
        事件：
            console.log(1) // 任务1
            btn.onclick = function(){ console.log("xx") }  // 任务2
            console.log(2) // 任务3

        定时器：
            console.log(1) // 任务1
            setTimout(()=>{console.log("timer")},3000); // 任务2
            console.log(2) // 任务3

        Ajax:
            是浏览器内部的小服务员，可以向服务器发出请求。
            console.log(1) // 任务1
            Ajax请求 // 任务2
            console.log(2) // 任务3
        Node:   
            文件操作分同步任务和异步任务
            同步任务：上一个没有执行OK的话，下一个任务是不能执行的。
            异步任务：专门开一个小线程，去执行异步任务。
 */